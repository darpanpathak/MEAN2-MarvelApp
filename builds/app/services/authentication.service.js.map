{"version":3,"sources":["services/authentication.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,uBAAuB,iBAAiB,CAAC,CAAA;AACzC,qBAAqB,eAAe,CAAC,CAAA;AACrC,wBAA+B,mBAAmB,CAAC,CAAA;AAInD;IAEI,+BAAoB,MAAc,EAAU,IAAU;QAAlC,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAE3D,sCAAM,GAAN;QACI,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,qCAAK,GAAL,UAAM,IAAU;QAAhB,iBAcC;QAbG,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,wBAAc,EAAE,CAAC;aAC/D,SAAS,CACV,UAAA,QAAQ;YACJ,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACrE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACnC,CAAC,EACD,UAAA,KAAK;YACD,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;YAC1B,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC,CAAC,CAAC;IAEX,CAAC;IAED,0CAAU,GAAV;QACI,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACpC,CAAC;QACD,IAAI,CACJ,CAAC;YACG,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;IACL,CAAC;IAlCL;QAAC,iBAAU,EAAE;;6BAAA;IAmCb,4BAAC;AAAD,CAlCA,AAkCC,IAAA;AAlCY,6BAAqB,wBAkCjC,CAAA","file":"authentication.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Http } from '@angular/http';\r\nimport { contentHeaders } from '../common/headers';\r\nimport { User } from '../models/user.model';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n    constructor(private router: Router, private http: Http) { }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"token\");\r\n        this.router.navigate(['login']);\r\n    }\r\n\r\n    login(user: User) {\r\n        let body = JSON.stringify(user);\r\n        this.http.post('/api/auth/login', body, { headers: contentHeaders })\r\n            .subscribe(\r\n            response => {\r\n                localStorage.setItem('token', JSON.stringify(response.json().token));\r\n                this.router.navigate(['home']);\r\n            },\r\n            error => {\r\n                alert(error.text());\r\n                console.log(error.text());\r\n                return false;\r\n            });\r\n\r\n    }\r\n\r\n    isLoggedin() {\r\n        if (localStorage.getItem(\"token\") === null) {\r\n            this.router.navigate(['Login']);\r\n        }\r\n        else\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n}"]}